name: Pull Request

on:
  pull_request:
    branches: [main]

env:
  CI: true
  HASURA_GRAPHQL_ADMIN_SECRET: secret
  HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
  HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "d374e7c8-912c-4871-bac2-7dde6afc2b55" }'
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_PORT: 5432
  POSTGRES_USER: postgres

jobs:
  CI:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        volumes:
          - postgres:/var/lib/postgresql/data
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      graphql-engine:
        image: hasura/graphql-engine:latest
        ports:
          - "8080:8080"
        env:
          HASURA_GRAPHQL_ADMIN_SECRET: secret
          HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
          HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "d374e7c8-912c-4871-bac2-7dde6afc2b55" }'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install -g pnpm; pnpm install

      - name: Install Hasura CLI
        run: curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash

      - name: Lint the client
        run: cd src && npx tsc && npx biome check

      - name: Migrate Hasura metadata
        run: node migrate.js

      - name: Run the Jest tests
        run: npm run test

      - name: Build the client Docker image
        run: docker build -f Dockerfile .

      - name: Build the server Docker image
        run: docker build -f Dockerfile.server .
